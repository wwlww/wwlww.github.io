<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A simple blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-05T08:07:30.636Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>wwlww</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>github actions部署hexo</title>
    <link href="http://example.com/2022/09/29/hexo_actions/"/>
    <id>http://example.com/2022/09/29/hexo_actions/</id>
    <published>2022-09-29T07:09:09.000Z</published>
    <updated>2022-10-05T08:07:30.636Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>简介：在将hexo搭建到github后，我发现每次都要用多个hexo的命令来推送并部署博客，并且原代码的上传也需要额外操作，比较麻烦。但是在浏览多个相关博客内容后，发现相关的教程都比较复杂，不太具备直接copy的能力，于是有此文。利用github action实现一键部署hexo到pages并备份博客代码。  </p></blockquote><h2 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1.创建仓库"></a>1.创建仓库</h2><p>我们需要两个github仓库来实现博客代码的私有化存储和hexo编译文件的pages布置。  </p><p><img src="https://wwlww.oss-cn-chengdu.aliyuncs.com/blog/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE(4).png" alt="github仓库"><br>另一个应该在部署hexo到github pages时已经建立，仓库名应该为<code>github用户名.github.io</code>  </p><h2 id="2-创建ssh密钥来让本地与github之间实现无密码拉取与推送"><a href="#2-创建ssh密钥来让本地与github之间实现无密码拉取与推送" class="headerlink" title="2.创建ssh密钥来让本地与github之间实现无密码拉取与推送"></a>2.创建ssh密钥来让本地与github之间实现无密码拉取与推送</h2><p>在终端输入创建ssh密钥的命令：<code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code>  </p><blockquote><p>注意:需要输入的是注册github的邮箱。并且在输入命令后一直回车就行。直到让你输入y&#x2F;n，输入y即可，后面让输入密码不用管，直接回车，否则以后每次拉取都要输入密码。  </p></blockquote><p>成功创建后，windows系统是在<code>C:user/用户名/.ssh/</code>文件夹下产生ssh密钥。<br><img src="https://wwlww.oss-cn-chengdu.aliyuncs.com/blog/ssh0.png" alt="ssh0"><br>其中id_rsa是私钥，id_rsa.pub是公钥。找到刚才建立的博客仓库的设置页面。选择secrets中的action选项。<br><img src="https://wwlww.oss-cn-chengdu.aliyuncs.com/blog/id_rsa.png" alt="secret"><br>在此添加私钥，起名为<code>HEXO_DEPLOY_KEY</code>将之前创建的id_rsa文件用记事本打开并复制到该密钥下。<br><img src="https://wwlww.oss-cn-chengdu.aliyuncs.com/blog/id_rsa1.png" alt="id-rsa1"><br>在github中点击自己的头像，进入settings页面，选择SSH and GPG keys，点击new SSH key,输入公钥。<br><img src="https://wwlww.oss-cn-chengdu.aliyuncs.com/blog/pub.png" alt="pub">  </p><h2 id="3-设置github-action"><a href="#3-设置github-action" class="headerlink" title="3.设置github action"></a>3.设置github action</h2><p>在hexo的主目录下，找到<code>.github/workflows/</code>文件夹，创建<code>deploy.yml</code>，输入如下代码修改后保存。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs css"><br>name: Deploy<br><br>on: [push]<br><br>jobs:<br>  build:<br>    runs-on: ubuntu-latest<br>    name: A job to deploy blog.<br>    steps:<br>      - name: Checkout<br>        uses: actions/checkout@v1<br>        with:<br>          submodules: true # Checkout private <span class="hljs-built_in">submodules</span>(themes or something else).<br><br>      # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over <span class="hljs-number">7</span> days.)<br>      - name: Cache node modules<br>        uses: actions/cache@v1<br>        id: cache<br>        with:<br>          path: node_modules<br>          key: $&#123;&#123; runner<span class="hljs-selector-class">.os</span> &#125;&#125;-node-$&#123;&#123; hashFiles(&#x27;**/package-lock<span class="hljs-selector-class">.json</span>&#x27;) &#125;&#125;<br>          restore-keys: |<br>            $&#123;&#123; runner<span class="hljs-selector-class">.os</span> &#125;&#125;-node-<br>      - name: Install Dependencies<br>        if: steps.cache.outputs.cache-hit != <span class="hljs-string">&#x27;true&#x27;</span><br>        run: npm ci<br><br>      # Deploy hexo blog website.<br>      - name: Deploy<br>        id: deploy<br>        uses: sma11black/hexo-action@v1.<span class="hljs-number">0.3</span><br>        with:<br>          deploy_key: $&#123;&#123; secrets<span class="hljs-selector-class">.HEXO_DEPLOY_KEY</span> &#125;&#125;//这是之前设置的私钥名<br>          user_name: 此处输入github名 # (or delete this input setting to use bot account)<br>          user_email: 此处输入github注册邮箱  # (or delete this input setting to use bot account)<br>          commit_msg: $&#123;&#123; github<span class="hljs-selector-class">.event</span><span class="hljs-selector-class">.head_commit</span><span class="hljs-selector-class">.message</span> &#125;&#125;  # (or delete this <span class="hljs-selector-tag">input</span> setting <span class="hljs-selector-tag">to</span> use hexo default settings)<br>      # Use the output <span class="hljs-selector-tag">from</span> the `deploy` step(use for test action)<br>      - name: Get the output<br>        run: |<br>          echo <span class="hljs-string">&quot;$&#123;&#123; steps.deploy.outputs.notify &#125;&#125;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="4-测试部署是否成功"><a href="#4-测试部署是否成功" class="headerlink" title="4.测试部署是否成功"></a>4.测试部署是否成功</h2><p>到此部署完成，进入终端，将代码push到存储博客代码的仓库，当actions检测到master分支接到推送后，会运行deploy，自动将代码编译并部署到github pages。</p><blockquote><p>注意：在hexo的config文件中，deploy部分的repo要设置为github.io仓库的ssh地址，格式为<code>git@github.com:用户名/用户名.github.io.git</code>。  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;简介：在将hexo搭建到github后，我发现每次都要用多个hexo的命令来推送并部署博客，并且原代码的上传也需要额外操作，比较麻烦。但是在浏览多个相关博客内容后，发现相关的教程都比较复杂，不太具备直接copy的能力，于是有此文。利用github </summary>
      
    
    
    
    <category term="建站" scheme="http://example.com/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="博客 GitHub hexo" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2-GitHub-hexo/"/>
    
  </entry>
  
</feed>
